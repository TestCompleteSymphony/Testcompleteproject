//USEUNIT LaunchApplication

function main()
{
  AddPhysicalTrade("1884430");
}

function AddPhysicalTrade(RealPortID)
{
  var x;
  
//  LaunchApplication["LaunchTradeCapture"]();
  
  //Create two Physical Trades

  Trade1 = CreateTrade(1)
//  Trade2 = CreateTrade(2)  
}



var Sno,TradeDate,Trader,ContractType,CounterPartyName,Buy_Sell,Commodity,ContractQty,ContractQtyUOM;
var MOT_Carrier,DeliveryTerm,RiskMarket,RiskPeriod,TitletransferLoc,Portfolio,PaymentTerm,DischargePort;
var LoadPort,TradePriceUOM;
var TradePriceCur,TradePrice,GT_C,CreditTerm;

function CreateTrade(TradeIndex)
{
  var x, TradeIndex;
  var TradeCapture= Aliases["TradeCapture"]
  var TradeWindow = Aliases["TradeCapture"]["HwndSource_ribbonWindow"]["ribbonWindow"];
  TradeWindow["Activate"]();
  
  //Choose Physical order 
  TradeWindow["TradeOrderTypesSelection"]["Grid"]["TradeOrderTypes"]["ToggleStateButton"]["Click"]();
  OCR["Recognize"](TradeCapture["HwndSource_PopupRoot"]["PopupRoot"]["itmPurchageOrSaleTradeOrder"])["BlockByText"]("Physical")["Click"]();
  
  //Clicks the 'New' button.
  TradeWindow["TradeOrderTypesSelection"]["Grid"]["NewBtn"]["ClickButton"]();
  
  var tradeLayoutGroup = TradeWindow["dwgMainPanel"]["mainPanel"]["tradeViewScroll"]["tradeLayoutGroup"]
  var PhyicalTradeInfoGrid = TradeWindow["dwgMainPanel"]["mainPanel"]["tradeViewScroll"]["PhyicalTradeInfoGrid"]
  var tradeItemLayoutGroup = TradeWindow["dwgMainPanel"]["mainPanel"]["tradeViewScroll"]["tradeItemLayoutGroup"]
  var tradeItemLayoutGroupSP = TradeWindow["dwgMainPanel"]["mainPanel"]["tradeViewScroll"]["tradeItemLayoutGroup"]["tradeItemLayoutGroupSP"]
  
  //Getting the excel sheet control
    
  var ExDriver=DDT["ExcelDriver"](aqConvert["VarToStr"](Files["FileNameByName"]("TestData_xlsx")),"TradeData",true);
  var ColumnCount = ExDriver["ColumnCount"];
  Log.Message("Total number columns are "+ ColumnCount);
	  
  //Setting the excel sheet focus to first cell value     
  ExDriver.First();
  
  while(!ExDriver.EOF())
  {
    
    for(var column=0;column<=ColumnCount;column++) 
    {       
        Sno = aqConvert["VarToStr"](ExDriver["Value"](column))
        if((aqConvert["VarToStr"](Sno) == aqConvert["VarToStr"](TradeIndex)))
        { 
          for(var column=1;column<ColumnCount;column++) 
          {
          
            switch(aqConvert["VarToStr"](ExDriver["ColumnName"](column)))
            {
                case "TradeDate":
                  tradeLayoutGroup["tradeDataCtl"]["StackPanel"]["StackPanel"]["StackPanel"]["ddContrEndDate"]["Text"] = aqConvert.VarToStr(ExDriver["Value"](column));
                  break;
        
                case "Trader":
                  //Entering Trader
                  tradeLayoutGroup["tradeDataCtl"]["StackPanel"]["StackPanel"]["StackPanel"]["TraderLookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Tab][Enter]");
                  break;
        
                case "ContractType":
                  //Entering Trade cmbTradeType
                  tradeLayoutGroup["tradeDataCtl"]["StackPanel"]["StackPanel"]["StackPanel"]["TradeType"]["SetText"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  break;
         
                case "CounterPartyName":
                  //Entering Trade Counterparty  
                  tradeLayoutGroup["tradeDataCtl"]["StackPanel"]["StackPanel"]["counterParty"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Enter]");          
                  break;
        
                case "Buy/Sell Indicator":
                  //Choosing Bu/Sell indicator 
                  PhyicalTradeInfoGrid["BuySellType"]["SetText"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  break;
         
                case "Commodity":
                  //Entering commodity
                  PhyicalTradeInfoGrid["StackPanel"]["CommodityLookup"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Enter]");
                  PhyicalTradeInfoGrid["StackPanel"]["CommodityLookup"]["Keys"]("[Tab]");
                  break;
       
                case "ContractQty":
                  //Enters Contract Qty
                  PhyicalTradeInfoGrid["spnlQuantity"]["TradeQuantity"]["SetText"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  PhyicalTradeInfoGrid["spnlQuantity"]["TradeQuantity"]["Keys"]("[Tab]");
                  break;
          
                case "ContractQtyUOM":
                  //Selecting Contract Qty UOM
                  PhyicalTradeInfoGrid["spnlQuantity"]["lookupEdit"]["SetText"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  PhyicalTradeInfoGrid["spnlQuantity"]["lookupEdit"]["Keys"]("[Tab]");
                  break;

                case "DeliveryPeriod":
                  PhyicalTradeInfoGrid["RecieptDatePeriodicity"]["RecieptDateTxt"]["SetText"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  break;
                            
                case "MOT/Carrier":
                  //Selecting MOT
                  PhyicalTradeInfoGrid["MotDropDown"]["WPFObject"]("motsDropDownCtl")["WPFObject"]("mainGrid")["WPFObject"]("DockPanel", "", 1)["WPFObject"]("textEditor")["SetText"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  break;
        
                case "DeliveryTerm":
                  //Selecting Delivery Term
                  PhyicalTradeInfoGrid["DeliveryTerm"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Enter]");
                  break;
    
                case "RiskMarket":
                  //Selecting Risk Market
                  PhyicalTradeInfoGrid["RiskMarket"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Enter]");
                  break;
        
                case "RiskPeriod":
                  //Selecting Risk Period 
                  PhyicalTradeInfoGrid["RiskTrdPrd"]["lookupEdit"]["Keys"]("[Del]")
                  PhyicalTradeInfoGrid["RiskTrdPrd"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  PhyicalTradeInfoGrid["RiskTrdPrd"]["lookupEdit"]["Keys"]("[Tab]")
                  break;
          
                case "TitletransferLoc":
                  //Selecting Title transfer location
                  PhyicalTradeInfoGrid["TitleTransferLoc"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Tab]");
                  break;
          
                case "Portfolio":
                  //Selecting Portfolio 
                  PhyicalTradeInfoGrid["Portfolio"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Enter]");
                  break;
          
                case "PaymentTerm":
                  //Selecting Payment term 
                  PhyicalTradeInfoGrid["PaymentTerm"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Enter]");
                  break;
          
                case "CreditTerm":
                  //Selecting Credit term
                  PhyicalTradeInfoGrid["CreditApproval"]["lookupEdit"]["Keys"]("[Del]")
                  PhyicalTradeInfoGrid["CreditApproval"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  PhyicalTradeInfoGrid["CreditApproval"]["lookupEdit"]["Keys"]("[Tab]")
                  break;
          
                case "GT&C":                
                  //Selecting GT & C
                  PhyicalTradeInfoGrid["GTandC"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Tab]");
                  break;
             
                case "TradePrice":
                  //Entering Fixed price 
                  PhyicalTradeInfoGrid["FormulaTabControl"]["txtFixedFinalPriceAmt"]["SetText"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  break;
      
                case "TradePriceCur":
                  //Selecting Price Currency
                  PhyicalTradeInfoGrid["FormulaTabControl"]["FixedFinalPrice"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column)));
                  break;
        
                case "TradePriceUOM":
                   //Selecting Price UOM
                   PhyicalTradeInfoGrid["FormulaTabControl"]["FixedFinalPriceUom"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Tab]");
                  break;
          
//                case "LoadPort":
//                
//                  break;
//                  
//                case "DischargePort":
//                  break;
                
                case "LeaseTank":
                  //Selecting Lease/Tank
                  tradeItemLayoutGroup["GroupBox"]["LabelTradeMisc"]["Click"]();
                  tradeItemLayoutGroupSP["dLocationTankInfo"]["lookupEdit"]["Keys"](aqConvert.VarToStr(ExDriver["Value"](column))+"[Tab]");
                  break;
            }  
          }
        }
        else
        {
          break;
        }	  
      }ExDriver.Next();
    } 

    // Set Tolerance value to zero.
    PhyicalTradeInfoGrid["PlusMinusQty"]["Click"]()
    PhyicalTradeInfoGrid["PlusMinusQty"]["SetText"]("0.00");
    
    //Click on Save button to save the trade;
    TradeWindow["dwgMainPanel"]["mainPanel"]["mainCtrlGrid"]["DockPanel"]["StackPanel"]["Save"]["ClickButton"]();
    
    //Delay the execution for 1minuate 
    aqUtils.Delay(5000); 
    
    TradeNum = aqString["SubString"](aqConvert["VarToStr"](TradeWindow["stkPnlStartupOptions"]["RecentTradesList"]["wItem"](0)), 1, 8);
    
  return TradeNum;
}

function test()
{
  var x, TradeIndex;
  var TradeCapture= Aliases["TradeCapture"]
  var TradeWindow = Aliases["TradeCapture"]["HwndSource_ribbonWindow"]["ribbonWindow"];
  var PhyicalTradeInfoGrid = TradeWindow["dwgMainPanel"]["mainPanel"]["tradeViewScroll"]["PhyicalTradeInfoGrid"]
  PhyicalTradeInfoGrid["RiskTrdPrd"]["lookupEdit"]["Keys"]("[Del]")
                  PhyicalTradeInfoGrid["RiskTrdPrd"]["lookupEdit"]["Keys"]("SEP-18");
                  PhyicalTradeInfoGrid["RiskTrdPrd"]["lookupEdit"]["Keys"]("[Tab]")
}

function Test1()
{
  var tradeCapture = Aliases["TradeCapture"];
  var scrollViewer = tradeCapture["HwndSource_ribbonWindow"]["ribbonWindow"]["dwgMainPanel"]["mainPanel"]["tradeViewScroll"];
  scrollViewer["VScroll"]["Pos"] = 89.32000000000005;
  scrollViewer["PhyicalTradeInfoGrid"]["RecieptDatePeriodicity"]["DropDown"]["ClickButton"]();
  var popupRoot = tradeCapture["HwndSource_PopupRoot"]["PopupRoot"];
  var dateNavigator = popupRoot["dateNavigator"];
  OCR["Recognize"](dateNavigator)["BlockByText"]("September", spRightMost)["Click"]();
  OCR["Recognize"](dateNavigator["DateNavigatorCalendar"]["DatenavigatorcalendarcellbuttonAugust"])["BlockByText"]("September")["Click"]();
  dateNavigator["Datenavigatorcalendarcellbutton1"]["Drag"](14, 9, 72, 77);
  popupRoot["btnOK"]["ClickButton"]();
}